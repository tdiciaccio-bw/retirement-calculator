{"version":3,"sources":["components/Inputs.tsx","components/App.tsx","index.tsx"],"names":["Inputs","props","useState","age","balance","salary","contribution","match","roi","retirementAge","state","setState","updateField","e","target","name","parseFloat","value","className","type","min","onChange","step","contributionValue","adjustedContribution","toFixed","onClick","preventDefault","inputs","onFormSubmit","onSubmitClick","App","data","setData","showGraph","setShowGraph","finalBalance","setFinalBalance","error","setError","calculateOneYear","years","contributionAmount","matchAmount","rate","Math","pow","generateGraphData","graphData","accountValue","year","employeeBalance","matchBalance","push","Date","getFullYear","employee","floor","total","renderBarChart","width","height","margin","top","right","left","bottom","barGap","dataKey","stackId","fill","Intl","NumberFormat","format","style","padding","newValue","slice","finalTotal","updateState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bfa2f34.chunk.js","sourcesContent":["import React, { ChangeEvent, FunctionComponent, useState, MouseEvent } from 'react';\nimport { FormData } from '../common/types';\n\ninterface InputsProps {\n  onFormSubmit: { (newValue: FormData): void }\n};\n\nconst Inputs: FunctionComponent<InputsProps> = (props) => {\n  const YEARLY_MAX = 19500;\n\n  const [state, setState] = useState<FormData>({\n    age: 30,\n    balance: 1000,\n    salary: 50000,\n    contribution: 10,\n    match: 3,\n    roi: 7,\n    retirementAge: 65\n  })\n\n  const updateField = (e: ChangeEvent<HTMLInputElement>) => {\n    setState({\n      ...state,\n      [e.target.name]: parseFloat(e.target.value)\n    })\n  }\n  \n  const updateContribution = (e: ChangeEvent<HTMLInputElement>) => {\n    const contributionValue = state.salary * (parseFloat(e.target.value) / 100);\n    let adjustedContribution = parseFloat(e.target.value);\n    if (contributionValue > YEARLY_MAX) {\n      adjustedContribution = parseFloat((YEARLY_MAX / state.salary * 100).toFixed(1));\n    }\n    setState({\n      ...state,\n      contribution: adjustedContribution\n    })\n  }\n\n  const onSubmitClick = (e: MouseEvent) => {\n    e.preventDefault();\n\n    const inputs: FormData = {\n      age: state.age,\n      balance: state.balance,\n      salary: state.salary,\n      contribution: state.contribution, \n      match: state.match,\n      roi: state.roi,\n      retirementAge: state.retirementAge \n    };\n    \n    props.onFormSubmit(inputs);\n  }\n\n  return (\n    <div>\n      <form className=\"ui form\">\n        <div className=\"field\">\n          <label>Age</label>\n          <div className=\"ui input\">\n            <input \n              type=\"number\"\n              min=\"18\"\n              name=\"age\" \n              value={ state.age }  \n              onChange={ updateField }\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label>Current Balance</label>\n          <div className=\"ui input\">\n            <input \n              type=\"number\" \n              min=\"0\"\n              name=\"balance\" \n              value={ state.balance } \n              onChange={ updateField }\n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label>Salary</label>\n          <div className=\"ui input\">\n            <input \n              type=\"number\" \n              min=\"0\"\n              name=\"salary\" \n              value={ state.salary }\n              onChange={ updateField }  \n            />\n          </div>\n        </div>\n        <div className=\"field\">\n          <label>Contribution Percentage</label>\n          <div className=\"ui right labeled input\">\n            <input \n              type=\"number\" \n              min=\"0\"\n              step=\"any\"\n              name=\"contribution\" \n              value={ state.contribution }\n              onChange={ updateContribution }  \n            />\n            <div className=\"ui basic label\">%</div>\n          </div>\n        </div>\n        <div className=\"field\">\n          <label>Employer Match</label>\n          <div className=\"ui right labeled input\">\n            <input \n              type=\"number\" \n              min=\"0\"\n              step=\"any\"\n              name=\"match\" \n              value={ state.match }\n              onChange={ updateField }  \n            />\n            <div className=\"ui basic label\">%</div>\n          </div>\n        </div>\n        <div className=\"field\">\n          <label>Estimated Yearly Return on Investment</label>\n          <div className=\"ui right labeled input\">\n            <input \n              type=\"number\" \n              min=\"0\"\n              step=\"0.1\"\n              name=\"roi\" \n              value={ state.roi }\n              onChange={ updateField }\n            />\n            <div className=\"ui basic label\">%</div>\n          </div>\n        </div>\n        <div className=\"field\">\n          <label>Retirement Age</label>\n          <div className=\"ui input\">\n            <input \n              type=\"number\" \n              name=\"retirementAge\" \n              value={ state.retirementAge }\n              onChange={ updateField }  \n            />\n          </div>\n        </div>\n        <button className=\"ui button\" type=\"submit\" onClick={ (e) => onSubmitClick(e) }>Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Inputs;","import React, { FunctionComponent, useState } from 'react';\nimport {\n  BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\nimport Inputs from './Inputs';\nimport { FormData } from '../common/types';\n\ntype GraphColumn = {\n  name: number,\n  employee: number,\n  match: number,\n  total: number\n}\n\nconst App: FunctionComponent = () => {\n\n  let [data, setData] = useState<Array<GraphColumn>>();\n  let [showGraph, setShowGraph] = useState(false);\n  let [finalBalance, setFinalBalance] = useState<number>(0);\n  let [error, setError] = useState('');\n\n  const updateState = (newValue: FormData) => {\n    const { age, retirementAge } = newValue;\n    if (age >= retirementAge) {\n      setError('Your retirement age must be greater than your current age');\n    } else {\n      const graphData = generateGraphData(newValue);\n      const [finalTotal] = graphData.slice(-1);\n      setData(graphData);\n      setShowGraph(true);\n      setFinalBalance(finalTotal.total);\n      setError('');\n    }\n  };\n  \n  const calculateOneYear = (salary: number, contribution: number, match: number, years: number,\n    roi: number, balance: number): number => {\n    const contributionAmount = salary * (contribution / 100);\n    const matchAmount = salary * (match / 100);\n    const MONTHS = 12;\n    const rate = roi / 100 / 12;\n\n    const accountValue = (balance * (1 + Math.pow(rate, years * 12))) \n     + ((contributionAmount + matchAmount) / MONTHS) * (Math.pow((1 + rate), (years * 12)) - 1) \n     / (rate * (1 + rate));\n\n    return accountValue;\n  };\n  \n  const generateGraphData = (inputs: FormData): Array<GraphColumn> => {\n    let graphData: Array<GraphColumn> = [];\n\n    let accountValue = inputs.balance;\n    const years = inputs.retirementAge - inputs.age;\n\n    for (let year = 1; year <= years; year++) {\n      let employeeBalance = calculateOneYear(inputs.salary,\n        inputs.contribution,\n        0,\n        year,\n        inputs.roi,\n        accountValue);\n\n      let matchBalance = calculateOneYear(inputs.salary,\n        0,\n        inputs.match,\n        year,\n        inputs.roi,\n        accountValue);\n\n      graphData.push({ \n        name: new Date().getFullYear() + year,\n        employee: Math.floor(employeeBalance), \n        match: Math.floor(matchBalance),\n        total: Math.floor(employeeBalance + matchBalance)\n      });\n    }\n    \n    return graphData;\n  }\n  \n  const renderBarChart = (\n    <div>\n      <ResponsiveContainer width=\"99%\" height={600}>\n      <BarChart\n        data={data}\n        margin={{\n          top: 20, right: 30, left: 20, bottom: 5,\n        }}\n        barGap={1}\n      >\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"employee\" stackId=\"a\" fill=\"#82ca9d\" />\n        <Bar dataKey=\"match\" stackId=\"a\" fill=\"#ffc658\" />\n        <Bar dataKey=\"total\" stackId=\"b\" fill=\"#8884d8\"/>\n      </BarChart>\n      </ResponsiveContainer>\n        <h3 className=\"ui center aligned header\">Total Retirement Value: { \n          new Intl.NumberFormat('en-US').format(finalBalance) }</h3>\n    </div>\n  )\n  \n  return (\n    <div className=\"ui container\" style={{padding: 10}}>\n      <h1>401k Calculator</h1>\n      <div className=\"ui grid\">\n        <div className=\"four wide column\">\n          <Inputs onFormSubmit={ (newValue: FormData) => updateState(newValue) }/>\n        </div>\n        <div className=\"twelve wide column\">\n        { error !== ''\n          ? <div className=\"ui raised segment\">{ error }</div>\n          : null\n        }\n        { showGraph && error === ''\n          ? renderBarChart\n          : null\n        }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}